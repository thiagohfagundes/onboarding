"""Stub file for reflex/components/radix/themes/layout/stack.py"""

# ------------------- DO NOT EDIT ----------------------
# This file was generated by `reflex/utils/pyi_generator.py`!
# ------------------------------------------------------
from collections.abc import Mapping, Sequence
from typing import Any, Literal

from reflex.components.core.breakpoints import Breakpoints
from reflex.event import EventType, PointerEventInfo
from reflex.vars.base import Var

from .flex import Flex

class Stack(Flex):
    @classmethod
    def create(
        cls,
        *children,
        spacing: Breakpoints[
            str, Literal["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"]
        ]
        | Literal["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"]
        | Var[
            Breakpoints[str, Literal["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"]]
            | Literal["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"]
        ]
        | None = None,
        align: Breakpoints[
            str, Literal["baseline", "center", "end", "start", "stretch"]
        ]
        | Literal["baseline", "center", "end", "start", "stretch"]
        | Var[
            Breakpoints[str, Literal["baseline", "center", "end", "start", "stretch"]]
            | Literal["baseline", "center", "end", "start", "stretch"]
        ]
        | None = None,
        as_child: Var[bool] | bool | None = None,
        direction: Breakpoints[
            str, Literal["column", "column-reverse", "row", "row-reverse"]
        ]
        | Literal["column", "column-reverse", "row", "row-reverse"]
        | Var[
            Breakpoints[str, Literal["column", "column-reverse", "row", "row-reverse"]]
            | Literal["column", "column-reverse", "row", "row-reverse"]
        ]
        | None = None,
        justify: Breakpoints[str, Literal["between", "center", "end", "start"]]
        | Literal["between", "center", "end", "start"]
        | Var[
            Breakpoints[str, Literal["between", "center", "end", "start"]]
            | Literal["between", "center", "end", "start"]
        ]
        | None = None,
        wrap: Breakpoints[str, Literal["nowrap", "wrap", "wrap-reverse"]]
        | Literal["nowrap", "wrap", "wrap-reverse"]
        | Var[
            Breakpoints[str, Literal["nowrap", "wrap", "wrap-reverse"]]
            | Literal["nowrap", "wrap", "wrap-reverse"]
        ]
        | None = None,
        style: Sequence[Mapping[str, Any]]
        | Mapping[str, Any]
        | Var[Mapping[str, Any]]
        | Breakpoints
        | None = None,
        key: Any | None = None,
        id: Any | None = None,
        ref: Var | None = None,
        class_name: Any | None = None,
        custom_attrs: dict[str, Var | Any] | None = None,
        on_blur: EventType[()] | None = None,
        on_click: EventType[()] | EventType[PointerEventInfo] | None = None,
        on_context_menu: EventType[()] | EventType[PointerEventInfo] | None = None,
        on_double_click: EventType[()] | EventType[PointerEventInfo] | None = None,
        on_focus: EventType[()] | None = None,
        on_mount: EventType[()] | None = None,
        on_mouse_down: EventType[()] | None = None,
        on_mouse_enter: EventType[()] | None = None,
        on_mouse_leave: EventType[()] | None = None,
        on_mouse_move: EventType[()] | None = None,
        on_mouse_out: EventType[()] | None = None,
        on_mouse_over: EventType[()] | None = None,
        on_mouse_up: EventType[()] | None = None,
        on_scroll: EventType[()] | None = None,
        on_scroll_end: EventType[()] | None = None,
        on_unmount: EventType[()] | None = None,
        **props,
    ) -> Stack:
        """Create a new instance of the component.

        Args:
            *children: The children of the stack.
            spacing: Gap between children: "0" - "9"
            align: Alignment of children along the main axis: "start" | "center" | "end" | "baseline" | "stretch"
            as_child: Change the default rendered element for the one passed as a child, merging their props and behavior.
            direction: How child items are laid out: "row" | "column" | "row-reverse" | "column-reverse"
            justify: Alignment of children along the cross axis: "start" | "center" | "end" | "between"
            wrap: Whether children should wrap when they reach the end of their container: "nowrap" | "wrap" | "wrap-reverse"
            style: The style of the component.
            key: A unique key for the component.
            id: The id for the component.
            ref: The Var to pass as the ref to the component.
            class_name: The class name for the component.
            custom_attrs: custom attribute
            **props: The properties of the stack.

        Returns:
            The stack component.
        """

class VStack(Stack):
    @classmethod
    def create(
        cls,
        *children,
        direction: Breakpoints[
            str, Literal["column", "column-reverse", "row", "row-reverse"]
        ]
        | Literal["column", "column-reverse", "row", "row-reverse"]
        | Var[
            Breakpoints[str, Literal["column", "column-reverse", "row", "row-reverse"]]
            | Literal["column", "column-reverse", "row", "row-reverse"]
        ]
        | None = None,
        spacing: Breakpoints[
            str, Literal["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"]
        ]
        | Literal["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"]
        | Var[
            Breakpoints[str, Literal["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"]]
            | Literal["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"]
        ]
        | None = None,
        align: Breakpoints[
            str, Literal["baseline", "center", "end", "start", "stretch"]
        ]
        | Literal["baseline", "center", "end", "start", "stretch"]
        | Var[
            Breakpoints[str, Literal["baseline", "center", "end", "start", "stretch"]]
            | Literal["baseline", "center", "end", "start", "stretch"]
        ]
        | None = None,
        as_child: Var[bool] | bool | None = None,
        justify: Breakpoints[str, Literal["between", "center", "end", "start"]]
        | Literal["between", "center", "end", "start"]
        | Var[
            Breakpoints[str, Literal["between", "center", "end", "start"]]
            | Literal["between", "center", "end", "start"]
        ]
        | None = None,
        wrap: Breakpoints[str, Literal["nowrap", "wrap", "wrap-reverse"]]
        | Literal["nowrap", "wrap", "wrap-reverse"]
        | Var[
            Breakpoints[str, Literal["nowrap", "wrap", "wrap-reverse"]]
            | Literal["nowrap", "wrap", "wrap-reverse"]
        ]
        | None = None,
        style: Sequence[Mapping[str, Any]]
        | Mapping[str, Any]
        | Var[Mapping[str, Any]]
        | Breakpoints
        | None = None,
        key: Any | None = None,
        id: Any | None = None,
        ref: Var | None = None,
        class_name: Any | None = None,
        custom_attrs: dict[str, Var | Any] | None = None,
        on_blur: EventType[()] | None = None,
        on_click: EventType[()] | EventType[PointerEventInfo] | None = None,
        on_context_menu: EventType[()] | EventType[PointerEventInfo] | None = None,
        on_double_click: EventType[()] | EventType[PointerEventInfo] | None = None,
        on_focus: EventType[()] | None = None,
        on_mount: EventType[()] | None = None,
        on_mouse_down: EventType[()] | None = None,
        on_mouse_enter: EventType[()] | None = None,
        on_mouse_leave: EventType[()] | None = None,
        on_mouse_move: EventType[()] | None = None,
        on_mouse_out: EventType[()] | None = None,
        on_mouse_over: EventType[()] | None = None,
        on_mouse_up: EventType[()] | None = None,
        on_scroll: EventType[()] | None = None,
        on_scroll_end: EventType[()] | None = None,
        on_unmount: EventType[()] | None = None,
        **props,
    ) -> VStack:
        """Create a new instance of the component.

        Args:
            *children: The children of the stack.
            direction: How child items are laid out: "row" | "column" | "row-reverse" | "column-reverse"
            spacing: Gap between children: "0" - "9"
            align: Alignment of children along the main axis: "start" | "center" | "end" | "baseline" | "stretch"
            as_child: Change the default rendered element for the one passed as a child, merging their props and behavior.
            justify: Alignment of children along the cross axis: "start" | "center" | "end" | "between"
            wrap: Whether children should wrap when they reach the end of their container: "nowrap" | "wrap" | "wrap-reverse"
            style: The style of the component.
            key: A unique key for the component.
            id: The id for the component.
            ref: The Var to pass as the ref to the component.
            class_name: The class name for the component.
            custom_attrs: custom attribute
            **props: The properties of the stack.

        Returns:
            The stack component.
        """

class HStack(Stack):
    @classmethod
    def create(
        cls,
        *children,
        direction: Breakpoints[
            str, Literal["column", "column-reverse", "row", "row-reverse"]
        ]
        | Literal["column", "column-reverse", "row", "row-reverse"]
        | Var[
            Breakpoints[str, Literal["column", "column-reverse", "row", "row-reverse"]]
            | Literal["column", "column-reverse", "row", "row-reverse"]
        ]
        | None = None,
        spacing: Breakpoints[
            str, Literal["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"]
        ]
        | Literal["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"]
        | Var[
            Breakpoints[str, Literal["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"]]
            | Literal["0", "1", "2", "3", "4", "5", "6", "7", "8", "9"]
        ]
        | None = None,
        align: Breakpoints[
            str, Literal["baseline", "center", "end", "start", "stretch"]
        ]
        | Literal["baseline", "center", "end", "start", "stretch"]
        | Var[
            Breakpoints[str, Literal["baseline", "center", "end", "start", "stretch"]]
            | Literal["baseline", "center", "end", "start", "stretch"]
        ]
        | None = None,
        as_child: Var[bool] | bool | None = None,
        justify: Breakpoints[str, Literal["between", "center", "end", "start"]]
        | Literal["between", "center", "end", "start"]
        | Var[
            Breakpoints[str, Literal["between", "center", "end", "start"]]
            | Literal["between", "center", "end", "start"]
        ]
        | None = None,
        wrap: Breakpoints[str, Literal["nowrap", "wrap", "wrap-reverse"]]
        | Literal["nowrap", "wrap", "wrap-reverse"]
        | Var[
            Breakpoints[str, Literal["nowrap", "wrap", "wrap-reverse"]]
            | Literal["nowrap", "wrap", "wrap-reverse"]
        ]
        | None = None,
        style: Sequence[Mapping[str, Any]]
        | Mapping[str, Any]
        | Var[Mapping[str, Any]]
        | Breakpoints
        | None = None,
        key: Any | None = None,
        id: Any | None = None,
        ref: Var | None = None,
        class_name: Any | None = None,
        custom_attrs: dict[str, Var | Any] | None = None,
        on_blur: EventType[()] | None = None,
        on_click: EventType[()] | EventType[PointerEventInfo] | None = None,
        on_context_menu: EventType[()] | EventType[PointerEventInfo] | None = None,
        on_double_click: EventType[()] | EventType[PointerEventInfo] | None = None,
        on_focus: EventType[()] | None = None,
        on_mount: EventType[()] | None = None,
        on_mouse_down: EventType[()] | None = None,
        on_mouse_enter: EventType[()] | None = None,
        on_mouse_leave: EventType[()] | None = None,
        on_mouse_move: EventType[()] | None = None,
        on_mouse_out: EventType[()] | None = None,
        on_mouse_over: EventType[()] | None = None,
        on_mouse_up: EventType[()] | None = None,
        on_scroll: EventType[()] | None = None,
        on_scroll_end: EventType[()] | None = None,
        on_unmount: EventType[()] | None = None,
        **props,
    ) -> HStack:
        """Create a new instance of the component.

        Args:
            *children: The children of the stack.
            direction: How child items are laid out: "row" | "column" | "row-reverse" | "column-reverse"
            spacing: Gap between children: "0" - "9"
            align: Alignment of children along the main axis: "start" | "center" | "end" | "baseline" | "stretch"
            as_child: Change the default rendered element for the one passed as a child, merging their props and behavior.
            justify: Alignment of children along the cross axis: "start" | "center" | "end" | "between"
            wrap: Whether children should wrap when they reach the end of their container: "nowrap" | "wrap" | "wrap-reverse"
            style: The style of the component.
            key: A unique key for the component.
            id: The id for the component.
            ref: The Var to pass as the ref to the component.
            class_name: The class name for the component.
            custom_attrs: custom attribute
            **props: The properties of the stack.

        Returns:
            The stack component.
        """

stack = Stack.create
hstack = HStack.create
vstack = VStack.create
